[{"path":"https://selkamand.github.io/sigstats/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sigstats authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://selkamand.github.io/sigstats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam El-Kamand. Author, maintainer.","code":""},{"path":"https://selkamand.github.io/sigstats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"El-Kamand S (2025). sigstats: Mathematical Operations Transformations Sigverse Signatures Catalogues. R package version 0.0.0.9000, https://github.com/selkamand/sigstats.","code":"@Manual{,   title = {sigstats: Mathematical Operations and Transformations for Sigverse Signatures and Catalogues},   author = {Sam El-Kamand},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/selkamand/sigstats}, }"},{"path":"https://selkamand.github.io/sigstats/index.html","id":"sigstats","dir":"","previous_headings":"","what":"Mathematical Operations and Transformations for Sigverse Signatures and Catalogues","title":"Mathematical Operations and Transformations for Sigverse Signatures and Catalogues","text":"sigstats enables common mathematical operations / transformations applied sigverse style signatures / catalogues","code":""},{"path":"https://selkamand.github.io/sigstats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mathematical Operations and Transformations for Sigverse Signatures and Catalogues","text":"can install development version sigstats like :","code":"if (!require(\"pak\", quietly = TRUE))     install.packages(\"pak\")  pak::pak(\"selkamand/sigstats\")"},{"path":"https://selkamand.github.io/sigstats/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Mathematical Operations and Transformations for Sigverse Signatures and Catalogues","text":"","code":"library(sigstats) library(sigstash) library(sigvis)  # Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Create a model that represents a mix of SBS2 (40%) and SBS13 (60%) model <- c(SBS2 = 0.4, SBS13 = 0.6)  # Add selected signatures to the combined model combined_signatures <- sig_combine(signatures, model)  # Visualise result sig_visualise(   combined_signatures,    title = \"Model\",   subtitle = \"Created by combining SBS2 (40%) and SBS13 (60%)\"   ) #> ✔ All channels matched perfectly to set [sbs_96]. Using this set for sort order #> ✔ All types matched perfectly to set [sbs_type]. Using this set for sort order #> ✔ Types matched perfectly to palette [snv_type]"},{"path":"https://selkamand.github.io/sigstats/index.html","id":"signature-operations","dir":"","previous_headings":"Quick Start","what":"Signature Operations","title":"Mathematical Operations and Transformations for Sigverse Signatures and Catalogues","text":"sigstats helps add subtract catalogues/signatures","code":"# Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Reconstruct catalogues for two pure samples (each with 100 mutations) catalogue1 <- sig_reconstruct(signatures[['SBS3']], n = 100) catalogue2 <- sig_reconstruct(signatures[['SBS4']], n = 100) catalogue3 <- sig_reconstruct(signatures[['SBS5']], n = 100)  # Subtract catalogue2 from catalogue1 difference <- catalogue1 %-% catalogue2  # Inspect result head(difference) #> # A tibble: 6 × 4 #>   type  channel fraction  count #>   <chr> <chr>      <dbl>  <dbl> #> 1 C>A   A[C>A]A  0.0224  -2.15  #> 2 C>A   A[C>A]C  0.0173  -1.66  #> 3 C>A   A[C>A]G  0.0149  -1.43  #> 4 C>A   A[C>A]T  0.0181  -1.74  #> 5 C>G   A[C>G]A  0.0134   1.29  #> 6 C>G   A[C>G]C  0.00912  0.878  # Sum three catalogues catalogue1 %+% catalogue2 %+% catalogue3 #> # A tibble: 96 × 4 #>    type  channel fraction count #>    <chr> <chr>      <dbl> <dbl> #>  1 C>A   A[C>A]A  0.0251  7.54  #>  2 C>A   A[C>A]C  0.0196  5.87  #>  3 C>A   A[C>A]G  0.00661 1.98  #>  4 C>A   A[C>A]T  0.0162  4.86  #>  5 C>G   A[C>G]A  0.0123  3.69  #>  6 C>G   A[C>G]C  0.00668 2.00  #>  7 C>G   A[C>G]G  0.00112 0.336 #>  8 C>G   A[C>G]T  0.0104  3.12  #>  9 C>T   A[C>T]A  0.0186  5.58  #> 10 C>T   A[C>T]C  0.0114  3.41  #> # ℹ 86 more rows  # Sum a catalogue collection catalogues <- list(cat1 = catalogue1, cat2 = catalogue2, cat3 = catalogue3) sig_sum(catalogues) #> # A tibble: 96 × 4 #>    type  channel fraction count #>    <chr> <chr>      <dbl> <dbl> #>  1 C>A   A[C>A]A  0.0251  7.54  #>  2 C>A   A[C>A]C  0.0196  5.87  #>  3 C>A   A[C>A]G  0.00661 1.98  #>  4 C>A   A[C>A]T  0.0162  4.86  #>  5 C>G   A[C>G]A  0.0123  3.69  #>  6 C>G   A[C>G]C  0.00668 2.00  #>  7 C>G   A[C>G]G  0.00112 0.336 #>  8 C>G   A[C>G]T  0.0104  3.12  #>  9 C>T   A[C>T]A  0.0186  5.58  #> 10 C>T   A[C>T]C  0.0114  3.41  #> # ℹ 86 more rows"},{"path":"https://selkamand.github.io/sigstats/index.html","id":"reconstruct-a-mutation-catalogue-from-a-signature-model","dir":"","previous_headings":"Quick Start","what":"Reconstruct a mutation catalogue from a signature model","title":"Mathematical Operations and Transformations for Sigverse Signatures and Catalogues","text":"often need reconstruct catalogue (tally) signature model.","code":"# Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Create a model that represents a mix of SBS2 (40%) and SBS13 (60%) model <- c(SBS2 = 0.4, SBS13 = 0.6)  # Create a new signature by combining SBS2 and SBS13 in ratios dictated by the above model signature <- sig_combine(signatures, model)  # Reconstruct a perfect catalogue describing what the mutational profile of a sample # with 200 mutations and the given signature model would look like reconstuction <- sig_reconstruct(signature, n=200)  # Visualise result sig_visualise(   reconstuction,    class = \"catalogue\",   title = \"Reconstructed Catalogue\",   subtitle = \"Expected profile of a sample with 200 mutations: 40% from SBS2, 60% from SBS13\"   ) #> ✔ All channels matched perfectly to set [sbs_96]. Using this set for sort order #> ✔ All types matched perfectly to set [sbs_type]. Using this set for sort order #> ✔ Types matched perfectly to palette [snv_type]"},{"path":"https://selkamand.github.io/sigstats/reference/compute_fraction_from_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert counts into fractions of total counts — compute_fraction_from_count","title":"Convert counts into fractions of total counts — compute_fraction_from_count","text":"Convert counts fractions total counts, dealing zero sum counts setting zero instead Inf","code":""},{"path":"https://selkamand.github.io/sigstats/reference/compute_fraction_from_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert counts into fractions of total counts — compute_fraction_from_count","text":"","code":"compute_fraction_from_count(counts)"},{"path":"https://selkamand.github.io/sigstats/reference/compute_fraction_from_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert counts into fractions of total counts — compute_fraction_from_count","text":"counts numeric vector counts","code":""},{"path":"https://selkamand.github.io/sigstats/reference/compute_fraction_from_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert counts into fractions of total counts — compute_fraction_from_count","text":"numeric vector fractions","code":""},{"path":"https://selkamand.github.io/sigstats/reference/compute_fraction_from_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert counts into fractions of total counts — compute_fraction_from_count","text":"Uses absolute value counts computing fractions.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/compute_fraction_from_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert counts into fractions of total counts — compute_fraction_from_count","text":"","code":"compute_fraction_from_count(c(10, 2, 1000, 50, 250)) #> [1] 0.007621951 0.001524390 0.762195122 0.038109756 0.190548780"},{"path":"https://selkamand.github.io/sigstats/reference/sig_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Two Catalogues — sig_add","title":"Add Two Catalogues — sig_add","text":"Sums two sigverse-style catalogues element-wise count values.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Two Catalogues — sig_add","text":"","code":"sig_add(catalogue1, catalogue2)  catalogue1 %+% catalogue2"},{"path":"https://selkamand.github.io/sigstats/reference/sig_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Two Catalogues — sig_add","text":"catalogue1, catalogue2 Two sigverse catalogue data.frames. See sigshared::example_catalogue(). Must type channel rows order.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Two Catalogues — sig_add","text":"single sigverse catalogue data.frame summed count recomputed fraction values. See sigshared::example_catalogue().","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Two Catalogues — sig_add","text":"operator provides concise way add two catalogues. summing multiple catalogues, use sig_sum().","code":""},{"path":[]},{"path":"https://selkamand.github.io/sigstats/reference/sig_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Two Catalogues — sig_add","text":"","code":"library(sigstash) signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\") cat1 <- sig_reconstruct(signatures[['SBS3']], n = 100) cat2 <- sig_reconstruct(signatures[['SBS4']], n = 100)  # Add two catalogues cat_sum <- cat1 %+% cat2  # Add multiple catalogues via repeated %+% cat3 <- sig_reconstruct(signatures[['SBS5']], n = 100) total <- cat1 %+% cat2 %+% cat3  # Addition two signatures using the full function name sig_add(cat1, cat2) #>     type channel     fraction      count #> 193  C>A A[C>A]A 0.0316852428  6.3370486 #> 194  C>A A[C>A]C 0.0246663871  4.9332774 #> 195  C>A A[C>A]G 0.0089617550  1.7923510 #> 196  C>A A[C>A]T 0.0209639178  4.1927836 #> 197  C>G A[C>G]A 0.0133721770  2.6744354 #> 198  C>G A[C>G]C 0.0072011674  1.4402335 #> 199  C>G A[C>G]G 0.0007918276  0.1583655 #> 200  C>G A[C>G]T 0.0105311931  2.1062386 #> 201  C>T A[C>T]A 0.0115167220  2.3033444 #> 202  C>T A[C>T]C 0.0082115956  1.6423191 #> 203  C>T A[C>T]G 0.0017317059  0.3463412 #> 204  C>T A[C>T]T 0.0082189911  1.6437982 #> 205  T>A A[T>A]A 0.0074307236  1.4861447 #> 206  T>A A[T>A]C 0.0053924863  1.0784973 #> 207  T>A A[T>A]G 0.0109874071  2.1974814 #> 208  T>A A[T>A]T 0.0051475377  1.0295075 #> 209  T>C A[T>C]A 0.0121845054  2.4369011 #> 210  T>C A[T>C]C 0.0042550534  0.8510107 #> 211  T>C A[T>C]G 0.0086239839  1.7247968 #> 212  T>C A[T>C]T 0.0094066639  1.8813328 #> 213  T>G A[T>G]A 0.0024916663  0.4983333 #> 214  T>G A[T>G]C 0.0013852076  0.2770415 #> 215  T>G A[T>G]G 0.0038483164  0.7696633 #> 216  T>G A[T>G]T 0.0020878086  0.4175617 #> 217  C>A C[C>A]A 0.0513222888 10.2644578 #> 218  C>A C[C>A]C 0.0518671712 10.3734342 #> 219  C>A C[C>A]G 0.0135561148  2.7112230 #> 220  C>A C[C>A]T 0.0419744130  8.3948826 #> 221  C>G C[C>G]A 0.0134907726  2.6981545 #> 222  C>G C[C>G]C 0.0103577956  2.0715591 #> 223  C>G C[C>G]G 0.0024591768  0.4918354 #> 224  C>G C[C>G]T 0.0144806181  2.8961236 #> 225  C>T C[C>T]A 0.0143216036  2.8643207 #> 226  C>T C[C>T]C 0.0156578081  3.1315616 #> 227  C>T C[C>T]G 0.0027853444  0.5570689 #> 228  C>T C[C>T]T 0.0193943111  3.8788622 #> 229  T>A C[T>A]A 0.0111692890  2.2338578 #> 230  T>A C[T>A]C 0.0150437757  3.0087551 #> 231  T>A C[T>A]G 0.0228492260  4.5698452 #> 232  T>A C[T>A]T 0.0123289921  2.4657984 #> 233  T>C C[T>C]A 0.0070042011  1.4008402 #> 234  T>C C[T>C]C 0.0084541885  1.6908377 #> 235  T>C C[T>C]G 0.0077992229  1.5598446 #> 236  T>C C[T>C]T 0.0092386160  1.8477232 #> 237  T>G C[T>G]A 0.0026196033  0.5239207 #> 238  T>G C[T>G]C 0.0037511770  0.7502354 #> 239  T>G C[T>G]G 0.0072441573  1.4488315 #> 240  T>G C[T>G]T 0.0041412799  0.8282560 #> 241  C>A G[C>A]A 0.0194053575  3.8810715 #> 242  C>A G[C>A]C 0.0225826855  4.5165371 #> 243  C>A G[C>A]G 0.0084490501  1.6898100 #> 244  C>A G[C>A]T 0.0155532679  3.1106536 #> 245  C>G G[C>G]A 0.0090128835  1.8025767 #> 246  C>G G[C>G]C 0.0071054154  1.4210831 #> 247  C>G G[C>G]G 0.0028885580  0.5777116 #> 248  C>G G[C>G]T 0.0088426046  1.7685209 #> 249  C>T G[C>T]A 0.0102651909  2.0530382 #> 250  C>T G[C>T]C 0.0088247027  1.7649405 #> 251  C>T G[C>T]G 0.0005100333  0.1020067 #> 252  C>T G[C>T]T 0.0075317776  1.5063555 #> 253  T>A G[T>A]A 0.0080922427  1.6184485 #> 254  T>A G[T>A]C 0.0055197439  1.1039488 #> 255  T>A G[T>A]G 0.0124071338  2.4814268 #> 256  T>A G[T>A]T 0.0090381390  1.8076278 #> 257  T>C G[T>C]A 0.0064018160  1.2803632 #> 258  T>C G[T>C]C 0.0033974373  0.6794875 #> 259  T>C G[T>C]G 0.0066652650  1.3330530 #> 260  T>C G[T>C]T 0.0055560292  1.1112058 #> 261  T>G G[T>G]A 0.0024940752  0.4988150 #> 262  T>G G[T>G]C 0.0012917057  0.2583411 #> 263  T>G G[T>G]G 0.0066954064  1.3390813 #> 264  T>G G[T>G]T 0.0030845823  0.6169165 #> 265  C>A T[C>A]A 0.0242496615  4.8499323 #> 266  C>A T[C>A]C 0.0319822393  6.3964479 #> 267  C>A T[C>A]G 0.0062876460  1.2575292 #> 268  C>A T[C>A]T 0.0258991395  5.1798279 #> 269  C>G T[C>G]A 0.0084896959  1.6979392 #> 270  C>G T[C>G]C 0.0131782627  2.6356525 #> 271  C>G T[C>G]G 0.0012002988  0.2400598 #> 272  C>G T[C>G]T 0.0135767913  2.7153583 #> 273  C>T T[C>T]A 0.0047781278  0.9556256 #> 274  C>T T[C>T]C 0.0101863896  2.0372779 #> 275  C>T T[C>T]G 0.0006486058  0.1297212 #> 276  C>T T[C>T]T 0.0077738087  1.5547617 #> 277  T>A T[T>A]A 0.0076015347  1.5203069 #> 278  T>A T[T>A]C 0.0075483505  1.5096701 #> 279  T>A T[T>A]G 0.0081893718  1.6378744 #> 280  T>A T[T>A]T 0.0093487214  1.8697443 #> 281  T>C T[T>C]A 0.0086973504  1.7394701 #> 282  T>C T[T>C]C 0.0048381744  0.9676349 #> 283  T>C T[T>C]G 0.0043690352  0.8738070 #> 284  T>C T[T>C]T 0.0072978831  1.4595766 #> 285  T>G T[T>G]A 0.0037668159  0.7533632 #> 286  T>G T[T>G]C 0.0032893109  0.6578622 #> 287  T>G T[T>G]G 0.0052257309  1.0451462 #> 288  T>G T[T>G]T 0.0055567613  1.1113523  # Alternatively, use sig_sum for a list of catalogues catalogues <- list(cat1 = cat1, cat2 = cat2, cat3 = cat3) total2 <- sig_sum(catalogues)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Signatures to a Combined Signature Model — sig_combine","title":"Add Signatures to a Combined Signature Model — sig_combine","text":"function takes signature collection model input adds selected signatures combined signature model. default output data.frame 'combined_signature_model' style data.frame format Sigverse package.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Signatures to a Combined Signature Model — sig_combine","text":"","code":"sig_combine(   signatures,   model,   format = c(\"signature\", \"combined\"),   verbose = FALSE )"},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Signatures to a Combined Signature Model — sig_combine","text":"signatures sigverse signature collection. See (sigshared::example_signature_collection()) details. model named numeric vector representing contribution signature combined model. names correspond signatures, values represent contributions. sum values vector less equal 1. format character string indicating output format. \"combined\", function returns 'combined_signature_model' data.frame row represents contribution particular channel single signature (duplicate channels collapsed). \"signature\", function returns data sigverse signature format, representing novel signature created combining signatures collection according ratios described model. verbose enables detailed output messages (flag).","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Signatures to a Combined Signature Model — sig_combine","text":"data.frame 'combined_signature_model' style containing selected signatures modified fractions based model.","code":""},{"path":[]},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Signatures to a Combined Signature Model — sig_combine","text":"","code":"library(sigstash)  # Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Create a model that represents a mix of SBS1 (40%) and SBS2 (60%) model <- c(SBS1 = 0.4, SBS2 = 0.6)  # Add selected signatures to the combined model combined_signatures <- sig_combine(signatures, model) print(combined_signatures) #>    type channel     fraction #> 1   C>A A[C>A]A 3.507565e-04 #> 2   C>A A[C>A]C 9.753506e-04 #> 3   C>A A[C>A]G 1.040620e-04 #> 4   C>A A[C>A]T 5.645758e-04 #> 5   C>G A[C>G]A 7.356219e-04 #> 6   C>G A[C>G]C 5.536380e-04 #> 7   C>G A[C>G]G 5.605870e-05 #> 8   C>G A[C>G]T 5.052782e-04 #> 9   C>T A[C>T]A 9.923988e-03 #> 10  C>T A[C>T]C 3.275645e-03 #> 11  C>T A[C>T]G 1.482697e-01 #> 12  C>T A[C>T]T 4.900869e-03 #> 13  T>A A[T>A]A 3.704447e-04 #> 14  T>A A[T>A]C 1.405570e-03 #> 15  T>A A[T>A]G 4.620521e-04 #> 16  T>A A[T>A]T 7.178224e-05 #> 17  T>C A[T>C]A 4.637984e-04 #> 18  T>C A[T>C]C 1.213215e-03 #> 19  T>C A[T>C]G 4.939210e-05 #> 20  T>C A[T>C]T 2.343610e-03 #> 21  T>G A[T>G]A 2.086691e-04 #> 22  T>G A[T>G]C 1.263457e-04 #> 23  T>G A[T>G]G 1.062807e-04 #> 24  T>G A[T>G]T 4.616597e-05 #> 25  C>A C[C>A]A 2.451991e-04 #> 26  C>A C[C>A]C 7.513668e-04 #> 27  C>A C[C>A]G 3.678179e-05 #> 28  C>A C[C>A]T 2.493459e-04 #> 29  C>G C[C>G]A 9.424529e-06 #> 30  C>G C[C>G]C 2.363192e-04 #> 31  C>G C[C>G]G 1.680262e-04 #> 32  C>G C[C>G]T 3.766841e-05 #> 33  C>T C[C>T]A 3.340651e-03 #> 34  C>T C[C>T]C 2.048862e-04 #> 35  C>T C[C>T]G 7.900789e-02 #> 36  C>T C[C>T]T 9.354423e-04 #> 37  T>A C[T>A]A 1.615965e-04 #> 38  T>A C[T>A]C 3.007052e-04 #> 39  T>A C[T>A]G 2.161075e-04 #> 40  T>A C[T>A]T 1.028904e-04 #> 41  T>C C[T>C]A 1.798213e-04 #> 42  T>C C[T>C]C 1.002896e-03 #> 43  T>C C[T>C]G 1.415402e-04 #> 44  T>C C[T>C]T 1.283336e-04 #> 45  T>G C[T>G]A 1.050587e-04 #> 46  T>G C[T>G]C 1.761738e-04 #> 47  T>G C[T>G]G 1.223743e-04 #> 48  T>G C[T>G]T 1.893343e-04 #> 49  C>A G[C>A]A 6.739429e-04 #> 50  C>A G[C>A]C 1.317277e-04 #> 51  C>A G[C>A]G 2.414671e-04 #> 52  C>A G[C>A]T 3.039667e-05 #> 53  C>G G[C>G]A 4.280223e-05 #> 54  C>G G[C>G]C 2.173235e-04 #> 55  C>G G[C>G]G 6.592130e-05 #> 56  C>G G[C>G]T 7.955379e-05 #> 57  C>T G[C>T]A 1.749326e-03 #> 58  C>T G[C>T]C 3.613588e-05 #> 59  C>T G[C>T]G 8.657135e-02 #> 60  C>T G[C>T]T 4.497471e-05 #> 61  T>A G[T>A]A 3.173979e-05 #> 62  T>A G[T>A]C 1.282647e-04 #> 63  T>A G[T>A]G 1.353408e-04 #> 64  T>A G[T>A]T 1.408428e-04 #> 65  T>C G[T>C]A 4.104283e-04 #> 66  T>C G[T>C]C 7.606214e-04 #> 67  T>C G[T>C]G 5.261763e-04 #> 68  T>C G[T>C]T 3.598995e-05 #> 69  T>G G[T>G]A 1.237254e-04 #> 70  T>G G[T>G]C 7.891291e-05 #> 71  T>G G[T>G]G 1.596591e-04 #> 72  T>G G[T>G]T 5.823419e-06 #> 73  C>A T[C>A]A 4.088038e-04 #> 74  C>A T[C>A]C 1.100521e-03 #> 75  C>A T[C>A]G 5.188617e-05 #> 76  C>A T[C>A]T 2.670355e-04 #> 77  C>G T[C>G]A 2.217865e-16 #> 78  C>G T[C>G]C 1.391628e-04 #> 79  C>G T[C>G]G 5.293497e-05 #> 80  C>G T[C>G]T 1.329548e-03 #> 81  C>T T[C>T]A 3.215172e-01 #> 82  C>T T[C>T]C 5.819379e-02 #> 83  C>T T[C>T]G 7.106643e-02 #> 84  C>T T[C>T]T 1.804772e-01 #> 85  T>A T[T>A]A 2.858385e-03 #> 86  T>A T[T>A]C 1.165516e-04 #> 87  T>A T[T>A]G 4.116638e-05 #> 88  T>A T[T>A]T 1.010989e-03 #> 89  T>C T[T>C]A 9.904566e-05 #> 90  T>C T[T>C]C 1.385195e-03 #> 91  T>C T[T>C]G 2.350857e-04 #> 92  T>C T[T>C]T 1.731088e-03 #> 93  T>G T[T>G]A 9.823727e-06 #> 94  T>G T[T>G]C 6.482091e-05 #> 95  T>G T[T>G]G 2.883043e-04 #> 96  T>G T[T>G]T 2.214016e-16  # Visualise using sigvis"},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine_collapse_to_single_signature.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse to single signatures — sig_combine_collapse_to_single_signature","title":"Collapse to single signatures — sig_combine_collapse_to_single_signature","text":"Convert output sig_combine() simple sigverse signature object. useful want run maths signature derived model Note visualisation signature combination models, suggest directly using output sig_combine() sigvis::sig_visualise() sigvis::sig_make_interactive() run original signature contributions preserved","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine_collapse_to_single_signature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse to single signatures — sig_combine_collapse_to_single_signature","text":"","code":"sig_combine_collapse_to_single_signature(signature_combination)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine_collapse_to_single_signature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse to single signatures — sig_combine_collapse_to_single_signature","text":"signature_combination dataframe produced sig_combine() represents combination multiple signatures known (exact) proportions - individual signature kept distinct make easy plot stackedbar","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine_collapse_to_single_signature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse to single signatures — sig_combine_collapse_to_single_signature","text":"data.frame sigverse signature format","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_combine_collapse_to_single_signature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse to single signatures — sig_combine_collapse_to_single_signature","text":"","code":"library(sigstash)  # Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Create a model that represents a mix of SBS1 (40%) and SBS2 (60%) model <- c(SBS1 = 0.4, SBS2 = 0.6)  # Add selected signatures to the combined model combined_signatures <- sig_combine(signatures, model)  # Flatten the combined_signatures dataframe that keeps separate signatures signature <- sig_combine_collapse_to_single_signature(combined_signatures)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_compute_experimental_p_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Experimental P-Value Based on Bootstrap Contributions — sig_compute_experimental_p_value","title":"Calculate Experimental P-Value Based on Bootstrap Contributions — sig_compute_experimental_p_value","text":"single signature, calculate proportion bootstraps percentage contribution specified threshold. value represents 'experimental' P-value. example, P < 0.05, <5% chance signature contribution >= threshold chance.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_compute_experimental_p_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Experimental P-Value Based on Bootstrap Contributions — sig_compute_experimental_p_value","text":"","code":"sig_compute_experimental_p_value(bootstraps, threshold)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_compute_experimental_p_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Experimental P-Value Based on Bootstrap Contributions — sig_compute_experimental_p_value","text":"bootstraps numeric vector describing percentage contributions single signature different bootstraps. threshold numeric value specifying minimum contribution threshold (typically 0.05). referred sparsity threshold.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_compute_experimental_p_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Experimental P-Value Based on Bootstrap Contributions — sig_compute_experimental_p_value","text":"proportion bootstraps contributions threshold. represents experimental p-value (referred sparsity p-value).","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_compute_experimental_p_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Experimental P-Value Based on Bootstrap Contributions — sig_compute_experimental_p_value","text":"","code":"bootstraps <- c(0.01, 0.03, 0.07, 0.02, 0.05) threshold <- 0.05 sig_compute_experimental_p_value(bootstraps, threshold) #> [1] 0.6"},{"path":"https://selkamand.github.io/sigstats/reference/sig_cosine_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cosine Matrix Between Two Signatures — sig_cosine_similarity","title":"Calculate Cosine Matrix Between Two Signatures — sig_cosine_similarity","text":"Computes cosine similarity pair signatures sigverse signature collection","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_cosine_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cosine Matrix Between Two Signatures — sig_cosine_similarity","text":"","code":"sig_cosine_similarity(signature1, signature2, assume_sensible_input = FALSE)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_cosine_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cosine Matrix Between Two Signatures — sig_cosine_similarity","text":"signature1, signature2 sigverse signature data.frames. See sigshared::example_signature(). assume_sensible_input logical flag indicating whether skip validation checks input signatures. Enabling option can significantly speed cosine similarity calculation assuming inputs valid signature objects channels already sorted. option used performance critical assumptions can verified upstream.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_cosine_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cosine Matrix Between Two Signatures — sig_cosine_similarity","text":"number 0 1 representing cosine similarity","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_cosine_similarity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cosine Matrix Between Two Signatures — sig_cosine_similarity","text":"","code":"library(sigstash)  # Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Compute cosine similarity between two signatures sig_cosine_similarity(signatures[[\"SBS1\"]], signatures[[\"SBS2\"]]) #> [1] 0.02031489"},{"path":"https://selkamand.github.io/sigstats/reference/sig_model_to_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Signature Model to String Representation — sig_model_to_string","title":"Convert Signature Model to String Representation — sig_model_to_string","text":"function converts named numeric vector model representing signature contributions formatted string. default, contributions displayed percentages, options customize formatting. Unexplained portions model (.e., contributions accounted signatures) can optionally displayed.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_model_to_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Signature Model to String Representation — sig_model_to_string","text":"","code":"sig_model_to_string(   model,   signature_sep = \" = \",   pair_sep = \" | \",   show_percent = TRUE,   significant_digits = 2,   include_unexplained = TRUE,   unexplained_label = \"?\" )"},{"path":"https://selkamand.github.io/sigstats/reference/sig_model_to_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Signature Model to String Representation — sig_model_to_string","text":"model named numeric vector representing contribution signature combined model. names correspond signatures, values represent contributions. sum values vector less equal 1. signature_sep character string used separate signature name value (default \" = \"). pair_sep character string used separate different signatures (default \" | \"). show_percent logical indicating whether format values percentages (default TRUE). significant_digits number significant digits display contributions (default 2). include_unexplained logical flag indicating whether include unexplained portion model (default TRUE). unexplained_label character string label unexplained portion model (default \"?\").","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_model_to_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Signature Model to String Representation — sig_model_to_string","text":"string representing signature model contributions formatted according specified options.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_model_to_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Signature Model to String Representation — sig_model_to_string","text":"","code":"model <- c(SBS1 = 0.4, SBS2 = 0.6) sig_model_to_string(model) #> [1] \"SBS2 = 60% | SBS1 = 40% | ? = 0%\"  # Example with no unexplained portion, significant digits and percentages sig_model_to_string(   model,   significant_digits = 3,   show_percent = FALSE,   include_unexplained = FALSE   ) #> [1] \"SBS2 = 0.6 | SBS1 = 0.4\""},{"path":"https://selkamand.github.io/sigstats/reference/sig_opportunities.html","id":null,"dir":"Reference","previous_headings":"","what":"Autosomal context counts — sig_opportunities","title":"Autosomal context counts — sig_opportunities","text":"Autosomal context counts","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_opportunities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autosomal context counts — sig_opportunities","text":"","code":"sig_opportunities()"},{"path":"https://selkamand.github.io/sigstats/reference/sig_opportunities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autosomal context counts — sig_opportunities","text":"list context counts generated contextcounter","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_opportunities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Autosomal context counts — sig_opportunities","text":"","code":"sig_opportunities() #> $GRCh38_tso500_trincucleotide_autosomal #>   ACA   ACC   ACG   ACT   ATA   ATC   ATG   ATT   CCA   CCC   CCG   CCT   CTA  #> 44360 39934 15859 37266 24482 35395 43634 34160 60668 49156 26148 56173 21926  #>   CTC   CTG   CTT   GCA   GCC   GCG   GCT   GTA   GTC   GTG   GTT   TCA   TCC  #> 51672 72675 51143 49299 50759 21555 49806 27166 33171 45371 31980 50011 51740  #>   TCG   TCT   TTA   TTC   TTG   TTT OTHER  #> 16538 53400 25759 50461 42424 51723     0  #>  #> $GRCh38_genome_dinucleotide_autosomal #>        AC        AT        CC        CG        CT        GC        TA        TC  #> 296799296 226707215 304463484  29403065 411467170 124936156 191730173 350911281  #>        TG        TT     OTHER  #> 427309272 576938292 165047079  #>  #> $GRCh38_genome_trinucleotide_autosomal #>       ACA       ACC       ACG       ACT       ATA       ATC       ATG       ATT  #> 119012480  67747193  15146753  94892542 120766156  78713412 107729216 146205171  #>       CCA       CCC       CCG       CCT       CTA       CTC       CTG       CTT  #> 107931875  76434468  16303633 103793100  75675881  99106599 118939447 117744705  #>       GCA       GCC       GCG       GCT       GTA       GTC       GTG       GTT  #>  84736367  69175621  14111520  81848493  66252975  55279200  88658315  86608493  #>       TCA       TCC       TCG       TCT       TTA       TTC       TTG       TTT  #> 115628044  91105815  13244081 130932605 120764978 117811561 111981796 226379353  #>     OTHER  #> 165048055  #>  #> $GRCh38_genome_pentanucleotide_autosomal #>     AACAA     AACAC     AACAG     AACAT     AACCA     AACCC     AACCG     AACCT  #>  11424148   6494598   8142211   9841652   6732363   5057050    658970   6430314  #>     AACGA     AACGC     AACGG     AACGT     AACTA     AACTC     AACTG     AACTT  #>   1053040    676410    902334   1204157   6360369   6482967   7039319   8108441  #>     AATAA     AATAC     AATAG     AATAT     AATCA     AATCC     AATCG     AATCT  #>  15759369   7111749   7169063  13508954   8612547   6428063    918572   8216106  #>     AATGA     AATGC     AATGG     AATGT     AATTA     AATTC     AATTG     AATTT  #>  10513404   6481812   7936885   9919455  11832075   8142634   7356677  16297551  #>     ACCAA     ACCAC     ACCAG     ACCAT     ACCCA     ACCCC     ACCCG     ACCCT  #>   6264974   5877403   5886645   6733208   6504455   4313236   1119338   4957778  #>     ACCGA     ACCGC     ACCGG     ACCGT     ACCTA     ACCTC     ACCTG     ACCTT  #>    635932    821143    598230    909551   4257598   6363434   6705069   5799039  #>     ACTAA     ACTAC     ACTAG     ACTAT     ACTCA     ACTCC     ACTCG     ACTCT  #>   6159123   3877157   3642063   5618933   6677084   6109529    918549   7024844  #>     ACTGA     ACTGC     ACTGG     ACTGT     ACTTA     ACTTC     ACTTG     ACTTT  #>   6838274   6432679   5759415   6808587   5934690   6245879   6273839  10571719  #>     AGCAA     AGCAC     AGCAG     AGCAT     AGCCA     AGCCC     AGCCG     AGCCT  #>   8326982   5529821   7973851   6744219   8491605   4945523   1387748   8584340  #>     AGCGA     AGCGC     AGCGG     AGCGT     AGCTA     AGCTC     AGCTG     AGCTT  #>   1187087    835659    901494    842055   5798164   5509916   8271268   6518582  #>     AGTAA     AGTAC     AGTAG     AGTAT     AGTCA     AGTCC     AGTCG     AGTCT  #>   6924715   3287053   5921737   5876488   6115254   4282549    565359   6533003  #>     AGTGA     AGTGC     AGTGG     AGTGT     AGTTA     AGTTC     AGTTG     AGTTT  #>   8552514   5460888   7043350   6338349   5858983   5908310   5488531  10735264  #>     ATCAA     ATCAC     ATCAG     ATCAT     ATCCA     ATCCC     ATCCG     ATCCT  #>   7243994   6355852   5996249   7693599   6619389   5518242    716900   6567097  #>     ATCGA     ATCGC     ATCGG     ATCGT     ATCTA     ATCTC     ATCTG     ATCTT  #>    743218    933946    503168    846571   5809973   7466279   7139206   8559408  #>     ATTAA     ATTAC     ATTAG     ATTAT     ATTCA     ATTCC     ATTCG     ATTCT  #>  10540193   6307625   6360001  11155933   9458163   6711951    791798  11113509  #>     ATTGA     ATTGC     ATTGG     ATTGT     ATTTA     ATTTC     ATTTG     ATTTT  #>   6851716   5372083   4910795   7587818  13447822  11368094  10640723  23586481  #>     CACAA     CACAC     CACAG     CACAT     CACCA     CACCC     CACCG     CACCT  #>   7658574   8565905   8847533   8370036   8191881   5483771   1289179   7249334  #>     CACGA     CACGC     CACGG     CACGT     CACTA     CACTC     CACTG     CACTT  #>   1122486   1670126   1291228   1522886   4296856   6030271   8804392   8263578  #>     CATAA     CATAC     CATAG     CATAT     CATCA     CATCC     CATCG     CATCT  #>   7021122   4029230   4922518   7910690   7176357   5213520    777253   8110034  #>     CATGA     CATGC     CATGG     CATGT     CATTA     CATTC     CATTG     CATTT  #>   7162381   5738571   6953175   7862591   6843811   7658020   6221408  14128323  #>     CCCAA     CCCAC     CCCAG     CCCAT     CCCCA     CCCCC     CCCCG     CCCCT  #>   6988763   6171722  11140994   5955485   7188304   3953913   1548580   5222488  #>     CCCGA     CCCGC     CCCGG     CCCGT     CCCTA     CCCTC     CCCTG     CCCTT  #>   1071434   1446401   1961027   1215404   3590518   5854280   7052084   6072835  #>     CCTAA     CCTAC     CCTAG     CCTAT     CCTCA     CCTCC     CCTCG     CCTCT  #>   4880648   3271851   4108879   4356563   8544761   9752216   1467954   8031106  #>     CCTGA     CCTGC     CCTGG     CCTGT     CCTTA     CCTTC     CCTTG     CCTTT  #>   7607646   6887270   9898587   7818010   4586091   7068833   6172604   9339847  #>     CGCAA     CGCAC     CGCAG     CGCAT     CGCCA     CGCCC     CGCCG     CGCCT  #>    685383    866723   1117421    713533   1399813   1635358    414252   2032392  #>     CGCGA     CGCGC     CGCGG     CGCGT     CGCTA     CGCTC     CGCTG     CGCTT  #>    235999    545201    482407    216689    478739   1002597   1152493   1132462  #>     CGTAA     CGTAC     CGTAG     CGTAT     CGTCA     CGTCC     CGTCG     CGTCT  #>    725993    406450    614550    846107    786007    761819    159303   1403791  #>     CGTGA     CGTGC     CGTGG     CGTGT     CGTTA     CGTTC     CGTTG     CGTTT  #>   1606537   1126931   1581953   1291312    660838    800869    882258   1491970  #>     CTCAA     CTCAC     CTCAG     CTCAT     CTCCA     CTCCC     CTCCG     CTCCT  #>   8153277   7218616   9764689   7269962   8738610   8666022   1390660   9846706  #>     CTCGA     CTCGC     CTCGG     CTCGT     CTCTA     CTCTC     CTCTG     CTCTT  #>   1066889    938726   1746188    982629   6108268   7850896  10122565   9241639  #>     CTTAA     CTTAC     CTTAG     CTTAT     CTTCA     CTTCC     CTTCG     CTTCT  #>   6818809   3978419   4538243   6179877   8318712   8358213    922437  10222503  #>     CTTGA     CTTGC     CTTGG     CTTGT     CTTTA     CTTTC     CTTTG     CTTTT  #>   7264065   5164261   6675759   6148991   8485626   9529406   9909675  15229489  #>     GACAA     GACAC     GACAG     GACAT     GACCA     GACCC     GACCG     GACCT  #>   5602482   4204072   6658617   5413460   4663226   3168310    534166   4427650  #>     GACGA     GACGC     GACGG     GACGT     GACTA     GACTC     GACTG     GACTT  #>    646084    572626   1125487    766723   3462083   3951798   4652705   5429583  #>     GATAA     GATAC     GATAG     GATAT     GATCA     GATCC     GATCG     GATCT  #>   5944980   3169958   3739393   5965473   5168914   3405694    804884   5061353  #>     GATGA     GATGC     GATGG     GATGT     GATTA     GATTC     GATTG     GATTT  #>   6141448   3659957   6192147   5283615   6000937   4994827   4370402   8809119  #>     GCCAA     GCCAC     GCCAG     GCCAT     GCCCA     GCCCC     GCCCG     GCCCT  #>   5613597   5769295   6704078   5264063   6105682   3957468   1419947   4599979  #>     GCCGA     GCCGC     GCCGG     GCCGT     GCCTA     GCCTC     GCCTG     GCCTT  #>   1187514    923088   1330113    708188   3363954   8080055   8608830   5539614  #>     GCTAA     GCTAC     GCTAG     GCTAT     GCTCA     GCTCC     GCTCG     GCTCT  #>   4795993   3369135   3067904   4103136   6649215   4419171    686284   5992893  #>     GCTGA     GCTGC     GCTGG     GCTGT     GCTTA     GCTTC     GCTTG     GCTTT  #>   6945045   5299650   9207574   5684812   3876718   5338687   4816576   7595458  #>     GGCAA     GGCAC     GGCAG     GGCAT     GGCCA     GGCCC     GGCCG     GGCCT  #>   5537451   4350682   7814719   5416845   6273056   3670848   1463326   5757489  #>     GGCGA     GGCGC     GGCGG     GGCGT     GGCTA     GGCTC     GGCTG     GGCTT  #>    909030   1322080   1874933   1375772   3822413   5457534   8864424   5264845  #>     GGTAA     GGTAC     GGTAG     GGTAT     GGTCA     GGTCC     GGTCG     GGTCT  #>   4121560   2383146   3453963   3902159   4537666   2759635    519278   4976769  #>     GGTGA     GGTGC     GGTGG     GGTGT     GGTTA     GGTTC     GGTTG     GGTTT  #>   6021546   3824175   7551797   4816648   3403561   3947241   4329019   7198873  #>     GTCAA     GTCAC     GTCAG     GTCAT     GTCCA     GTCCC     GTCCG     GTCCT  #>   4335161   4031843   5123896   4791037   4061807   3856000    514344   4541549  #>     GTCGA     GTCGC     GTCGG     GTCGT     GTCTA     GTCTC     GTCTG     GTCTT  #>    429369    545431    545704    501942   3579157   6648045   5169524   6604265  #>     GTTAA     GTTAC     GTTAG     GTTAT     GTTCA     GTTCC     GTTCG     GTTCT  #>   5329631   3143050   3491779   5053279   6222455   4084454    653870   6378360  #>     GTTGA     GTTGC     GTTGG     GTTGT     GTTTA     GTTTC     GTTTG     GTTTT  #>   4997945   3990614   4744776   4896114   6411653   7726637   6973720  12509975  #>     TACAA     TACAC     TACAG     TACAT     TACCA     TACCC     TACCG     TACCT  #>   8119069   4436780   7424748   7808331   5174763   3185686    482538   5017839  #>     TACGA     TACGC     TACGG     TACGT     TACTA     TACTC     TACTG     TACTT  #>    621779    435810    567454    968056   5177978   4264966   5342541   7224515  #>     TATAA     TATAC     TATAG     TATAT     TATCA     TATCC     TATCG     TATCT  #>  10225862   5320433   5375579  13591490   6331873   4374357    526202   7587374  #>     TATGA     TATGC     TATGG     TATGT     TATTA     TATTC     TATTG     TATTT  #>   6613814   4131636   4770277   8367821   9686926   7280126   6773933  19808130  #>     TCCAA     TCCAC     TCCAG     TCCAT     TCCCA     TCCCC     TCCCG     TCCCT  #>   7265512   5959481   8436676   7899724  10458521   5688665   1606403   7789472  #>     TCCGA     TCCGC     TCCGG     TCCGT     TCCTA     TCCTC     TCCTG     TCCTT  #>    633015   1030990    778175   1053364   5405872   7498263   9845537   9755891  #>     TCTAA     TCTAC     TCTAG     TCTAT     TCTCA     TCTCC     TCTCG     TCTCT  #>   6810254   5209411   5276757   7127918  10535491   8361098   1661653  12274533  #>     TCTGA     TCTGC     TCTGG     TCTGT     TCTTA     TCTTC     TCTTG     TCTTT  #>   8292400   7394727   7302823  10761699   7117849   9168466   7990057  15647180  #>     TGCAA     TGCAC     TGCAG     TGCAT     TGCCA     TGCCC     TGCCG     TGCCT  #>   7790767   5622068   9108320   7137363   7186559   5831352    883575   9218224  #>     TGCGA     TGCGC     TGCGG     TGCGT     TGCTA     TGCTC     TGCTG     TGCTT  #>    696154    803662    962788    920455   5236853   5777529   8848875   8711542  #>     TGTAA     TGTAC     TGTAG     TGTAT     TGTCA     TGTCC     TGTCG     TGTCT  #>   8871465   4173541   5737300   9006622   6842998   5169699    778507   9087433  #>     TGTGA     TGTGC     TGTGG     TGTGT     TGTTA     TGTTC     TGTTG     TGTTT  #>   8628908   5957312   7600800  11255038   7094362   6682733   7929638  14195875  #>     TTCAA     TTCAC     TTCAG     TTCAT     TTCCA     TTCCC     TTCCG     TTCCT  #>  10971449   7203190   8798514  10676449  10141596   7502788    873633  11550216  #>     TTCGA     TTCGC     TTCGG     TTCGT     TTCTA     TTCTC     TTCTG     TTCTT  #>   1004984    610169    732838   1112251   8926938  10867552  11320257  15518251  #>     TTTAA     TTTAC     TTTAG     TTTAT     TTTCA     TTTCC     TTTCG     TTTCT  #>  15835082   7214641   8256001  16562239  13650276  10913609   1092144  18918626  #>     TTTGA     TTTGC     TTTGG     TTTGT     TTTTA     TTTTC     TTTTG     TTTTT  #>  11590147   7813631   9801528  14171345  19522861  15950497  15852534  39233648  #>     OTHER  #> 165049993  #>"},{"path":"https://selkamand.github.io/sigstats/reference/sig_reconstruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct a catalogue from a signature — sig_reconstruct","title":"Reconstruct a catalogue from a signature — sig_reconstruct","text":"Generates reconstructed substitution profile (catalogues) generated proportionally combining estimated contribution.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_reconstruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct a catalogue from a signature — sig_reconstruct","text":"","code":"sig_reconstruct(signature, n)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_reconstruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct a catalogue from a signature — sig_reconstruct","text":"signature data.frame sigverse signature format. See sigshared::example_signature() details. n total number variants use reconstruction","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_reconstruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct a catalogue from a signature — sig_reconstruct","text":"data.frame conforming sigverse catalogue format","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_reconstruct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct a catalogue from a signature — sig_reconstruct","text":"","code":"library(sigstash)  # Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Create a model that represents a mix of SBS1 (40%) and SBS2 (60%) model <- c(SBS1 = 0.4, SBS2 = 0.6)  # Add selected signatures to the combined model combined_signatures <- sig_combine(signatures, model)  # Flatten the combined_signatures dataframe that keeps separate signatures signature <- sig_combine_collapse_to_single_signature(combined_signatures)  # Reconstruct a perfect catalogue describing what the mutational profile of a sample # with 200 mutations and the given signature model would look like reconstuction <- sig_reconstruct(signature, n=200)  # Visualise Result # sig_visualise(reconstuction, class = \"catalogue\")"},{"path":"https://selkamand.github.io/sigstats/reference/sig_renormalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Signature renormalisation — sig_renormalise","title":"Signature renormalisation — sig_renormalise","text":"Transform signature look like called different pipeline/genome/organism account different 'mutation opportunites'","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_renormalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signature renormalisation — sig_renormalise","text":"","code":"sig_renormalise(signature, opportunities_original, opportunities_new)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_renormalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signature renormalisation — sig_renormalise","text":"signature sigverse style signature data.frames. See sigshared::example_signature(). opportunities_original named vector mutation opportunities context. See sig_opportunities(). opportunities_new named vector mutation opportunities context. See sig_opportunities().","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_renormalise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signature renormalisation — sig_renormalise","text":"sigverse style signature data.frame. See sigshared::example_signature().","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_renormalise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signature renormalisation — sig_renormalise","text":"","code":"opps <- sig_opportunities() signature <- data.frame(   channel = c(\"A[C>G]G\", \"A[C>G]C\", \"A[C>G]T\"),   type = c(\"C>G\", \"C>G\", \"C>G\"),   fraction = c(0.4, 0.1, 0.5) )  # Convert genome signature to panel signature (TSO 500) sig_renormalise(   signature,   opps$GRCh38_genome_trinucleotide_autosomal,   opps$GRCh38_tso500_trincucleotide_autosomal ) #>   channel type   fraction #> 1 A[C>G]G  C>G 0.62127379 #> 2 A[C>G]C  C>G 0.08744164 #> 3 A[C>G]T  C>G 0.29128457"},{"path":"https://selkamand.github.io/sigstats/reference/sig_subtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtract Signatures/Catalogues — sig_subtract","title":"Subtract Signatures/Catalogues — sig_subtract","text":"Subtracts signature2 signature1 returns result.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_subtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtract Signatures/Catalogues — sig_subtract","text":"","code":"sig_subtract(signature1, signature2)  signature1 %-% signature2"},{"path":"https://selkamand.github.io/sigstats/reference/sig_subtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtract Signatures/Catalogues — sig_subtract","text":"signature1, signature2 sigverse signature/catalogue data.frames. See sigshared::example_signature() sigshared::example_catalogue().","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_subtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtract Signatures/Catalogues — sig_subtract","text":"data.frame representing sigverse signature.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_subtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtract Signatures/Catalogues — sig_subtract","text":"","code":"library(sigstash)  # Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Subtract signatures signatures[['SBS3']] %-% signatures[['SBS4']] #>     type channel      fraction #> 193  C>A A[C>A]A -2.153099e-02 #> 194  C>A A[C>A]C -1.664639e-02 #> 195  C>A A[C>A]G -1.430841e-02 #> 196  C>A A[C>A]T -1.739770e-02 #> 197  C>G A[C>G]A  1.288248e-02 #> 198  C>G A[C>G]C  8.775283e-03 #> 199  C>G A[C>G]G -1.061015e-03 #> 200  C>G A[C>G]T  1.392321e-02 #> 201  C>T A[C>T]A  5.530060e-03 #> 202  C>T A[C>T]C  8.141122e-03 #> 203  C>T A[C>T]G  1.845617e-03 #> 204  C>T A[C>T]T  7.891082e-03 #> 205  T>A A[T>A]A -3.918470e-03 #> 206  T>A A[T>A]C  3.694537e-03 #> 207  T>A A[T>A]G -2.753820e-03 #> 208  T>A A[T>A]T  1.894499e-03 #> 209  T>C A[T>C]A  8.519717e-03 #> 210  T>C A[T>C]C  7.073942e-03 #> 211  T>C A[T>C]G  7.276744e-03 #> 212  T>C A[T>C]T  1.570053e-02 #> 213  T>G A[T>G]A  2.890030e-03 #> 214  T>G A[T>G]C  2.451044e-03 #> 215  T>G A[T>G]G  4.864805e-03 #> 216  T>G A[T>G]T  3.744614e-03 #> 217  C>A C[C>A]A -5.789319e-02 #> 218  C>A C[C>A]C -5.375123e-02 #> 219  C>A C[C>A]G -2.207407e-02 #> 220  C>A C[C>A]T -5.331806e-02 #> 221  C>G C[C>G]A  1.140520e-02 #> 222  C>G C[C>G]C  7.140612e-03 #> 223  C>G C[C>G]G -1.907500e-03 #> 224  C>G C[C>G]T  1.539370e-02 #> 225  C>T C[C>T]A  3.378900e-03 #> 226  C>T C[C>T]C  8.591852e-03 #> 227  C>T C[C>T]G -1.074480e-03 #> 228  C>T C[C>T]T  6.958618e-03 #> 229  T>A C[T>A]A -6.461466e-03 #> 230  T>A C[T>A]C  5.613680e-03 #> 231  T>A C[T>A]G -1.930279e-02 #> 232  T>A C[T>A]T  9.035457e-04 #> 233  T>C C[T>C]A  3.648386e-03 #> 234  T>C C[T>C]C  1.217409e-02 #> 235  T>C C[T>C]G  4.598236e-03 #> 236  T>C C[T>C]T  1.332373e-02 #> 237  T>G C[T>G]A  3.499204e-03 #> 238  T>G C[T>G]C  6.617684e-03 #> 239  T>G C[T>G]G  6.908170e-03 #> 240  T>G C[T>G]T  5.866854e-03 #> 241  C>A G[C>A]A -2.452313e-02 #> 242  C>A G[C>A]C -2.362341e-02 #> 243  C>A G[C>A]G -1.400985e-02 #> 244  C>A G[C>A]T -1.116893e-02 #> 245  C>G G[C>G]A  7.423360e-03 #> 246  C>G G[C>G]C  2.844868e-03 #> 247  C>G G[C>G]G -8.893042e-04 #> 248  C>G G[C>G]T  1.162307e-02 #> 249  C>T G[C>T]A  1.233306e-02 #> 250  C>T G[C>T]C  8.833372e-03 #> 251  C>T G[C>T]G  4.636514e-05 #> 252  C>T G[C>T]T  7.465936e-03 #> 253  T>A G[T>A]A -2.148785e-03 #> 254  T>A G[T>A]C  3.864925e-03 #> 255  T>A G[T>A]G -1.509206e-03 #> 256  T>A G[T>A]T  6.876089e-03 #> 257  T>C G[T>C]A  7.037202e-03 #> 258  T>C G[T>C]C  4.443212e-03 #> 259  T>C G[T>C]G  8.568192e-03 #> 260  T>C G[T>C]T  9.580148e-03 #> 261  T>G G[T>G]A  3.799073e-03 #> 262  T>G G[T>G]C  2.079199e-03 #> 263  T>G G[T>G]G  8.507909e-03 #> 264  T>G G[T>G]T  5.657852e-03 #> 265  C>A T[C>A]A -3.158094e-02 #> 266  C>A T[C>A]C -3.022953e-02 #> 267  C>A T[C>A]G -9.694986e-03 #> 268  C>A T[C>A]T -3.165580e-02 #> 269  C>G T[C>G]A  9.776192e-03 #> 270  C>G T[C>G]C  1.440654e-02 #> 271  C>G T[C>G]G -1.338357e-03 #> 272  C>G T[C>G]T  2.032369e-02 #> 273  C>T T[C>T]A  2.031125e-03 #> 274  C>T T[C>T]C  6.334056e-03 #> 275  C>T T[C>T]G  7.230880e-04 #> 276  C>T T[C>T]T  9.583094e-04 #> 277  T>A T[T>A]A -2.342574e-03 #> 278  T>A T[T>A]C  6.308687e-03 #> 279  T>A T[T>A]G -2.853877e-03 #> 280  T>A T[T>A]T  7.409249e-03 #> 281  T>C T[T>C]A  1.263288e-02 #> 282  T>C T[T>C]C  8.650741e-03 #> 283  T>C T[T>C]G  5.230234e-03 #> 284  T>C T[T>C]T  1.331831e-02 #> 285  T>G T[T>G]A  6.788732e-03 #> 286  T>G T[T>G]C  6.223839e-03 #> 287  T>G T[T>G]G  5.774346e-03 #> 288  T>G T[T>G]T  9.972652e-03  # Identical approach using full function name sig_subtract(signatures[['SBS3']], signatures[['SBS4']]) #>     type channel      fraction #> 193  C>A A[C>A]A -2.153099e-02 #> 194  C>A A[C>A]C -1.664639e-02 #> 195  C>A A[C>A]G -1.430841e-02 #> 196  C>A A[C>A]T -1.739770e-02 #> 197  C>G A[C>G]A  1.288248e-02 #> 198  C>G A[C>G]C  8.775283e-03 #> 199  C>G A[C>G]G -1.061015e-03 #> 200  C>G A[C>G]T  1.392321e-02 #> 201  C>T A[C>T]A  5.530060e-03 #> 202  C>T A[C>T]C  8.141122e-03 #> 203  C>T A[C>T]G  1.845617e-03 #> 204  C>T A[C>T]T  7.891082e-03 #> 205  T>A A[T>A]A -3.918470e-03 #> 206  T>A A[T>A]C  3.694537e-03 #> 207  T>A A[T>A]G -2.753820e-03 #> 208  T>A A[T>A]T  1.894499e-03 #> 209  T>C A[T>C]A  8.519717e-03 #> 210  T>C A[T>C]C  7.073942e-03 #> 211  T>C A[T>C]G  7.276744e-03 #> 212  T>C A[T>C]T  1.570053e-02 #> 213  T>G A[T>G]A  2.890030e-03 #> 214  T>G A[T>G]C  2.451044e-03 #> 215  T>G A[T>G]G  4.864805e-03 #> 216  T>G A[T>G]T  3.744614e-03 #> 217  C>A C[C>A]A -5.789319e-02 #> 218  C>A C[C>A]C -5.375123e-02 #> 219  C>A C[C>A]G -2.207407e-02 #> 220  C>A C[C>A]T -5.331806e-02 #> 221  C>G C[C>G]A  1.140520e-02 #> 222  C>G C[C>G]C  7.140612e-03 #> 223  C>G C[C>G]G -1.907500e-03 #> 224  C>G C[C>G]T  1.539370e-02 #> 225  C>T C[C>T]A  3.378900e-03 #> 226  C>T C[C>T]C  8.591852e-03 #> 227  C>T C[C>T]G -1.074480e-03 #> 228  C>T C[C>T]T  6.958618e-03 #> 229  T>A C[T>A]A -6.461466e-03 #> 230  T>A C[T>A]C  5.613680e-03 #> 231  T>A C[T>A]G -1.930279e-02 #> 232  T>A C[T>A]T  9.035457e-04 #> 233  T>C C[T>C]A  3.648386e-03 #> 234  T>C C[T>C]C  1.217409e-02 #> 235  T>C C[T>C]G  4.598236e-03 #> 236  T>C C[T>C]T  1.332373e-02 #> 237  T>G C[T>G]A  3.499204e-03 #> 238  T>G C[T>G]C  6.617684e-03 #> 239  T>G C[T>G]G  6.908170e-03 #> 240  T>G C[T>G]T  5.866854e-03 #> 241  C>A G[C>A]A -2.452313e-02 #> 242  C>A G[C>A]C -2.362341e-02 #> 243  C>A G[C>A]G -1.400985e-02 #> 244  C>A G[C>A]T -1.116893e-02 #> 245  C>G G[C>G]A  7.423360e-03 #> 246  C>G G[C>G]C  2.844868e-03 #> 247  C>G G[C>G]G -8.893042e-04 #> 248  C>G G[C>G]T  1.162307e-02 #> 249  C>T G[C>T]A  1.233306e-02 #> 250  C>T G[C>T]C  8.833372e-03 #> 251  C>T G[C>T]G  4.636514e-05 #> 252  C>T G[C>T]T  7.465936e-03 #> 253  T>A G[T>A]A -2.148785e-03 #> 254  T>A G[T>A]C  3.864925e-03 #> 255  T>A G[T>A]G -1.509206e-03 #> 256  T>A G[T>A]T  6.876089e-03 #> 257  T>C G[T>C]A  7.037202e-03 #> 258  T>C G[T>C]C  4.443212e-03 #> 259  T>C G[T>C]G  8.568192e-03 #> 260  T>C G[T>C]T  9.580148e-03 #> 261  T>G G[T>G]A  3.799073e-03 #> 262  T>G G[T>G]C  2.079199e-03 #> 263  T>G G[T>G]G  8.507909e-03 #> 264  T>G G[T>G]T  5.657852e-03 #> 265  C>A T[C>A]A -3.158094e-02 #> 266  C>A T[C>A]C -3.022953e-02 #> 267  C>A T[C>A]G -9.694986e-03 #> 268  C>A T[C>A]T -3.165580e-02 #> 269  C>G T[C>G]A  9.776192e-03 #> 270  C>G T[C>G]C  1.440654e-02 #> 271  C>G T[C>G]G -1.338357e-03 #> 272  C>G T[C>G]T  2.032369e-02 #> 273  C>T T[C>T]A  2.031125e-03 #> 274  C>T T[C>T]C  6.334056e-03 #> 275  C>T T[C>T]G  7.230880e-04 #> 276  C>T T[C>T]T  9.583094e-04 #> 277  T>A T[T>A]A -2.342574e-03 #> 278  T>A T[T>A]C  6.308687e-03 #> 279  T>A T[T>A]G -2.853877e-03 #> 280  T>A T[T>A]T  7.409249e-03 #> 281  T>C T[T>C]A  1.263288e-02 #> 282  T>C T[T>C]C  8.650741e-03 #> 283  T>C T[T>C]G  5.230234e-03 #> 284  T>C T[T>C]T  1.331831e-02 #> 285  T>G T[T>G]A  6.788732e-03 #> 286  T>G T[T>G]C  6.223839e-03 #> 287  T>G T[T>G]G  5.774346e-03 #> 288  T>G T[T>G]T  9.972652e-03"},{"path":"https://selkamand.github.io/sigstats/reference/sig_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum a Collection Catalogues — sig_sum","title":"Sum a Collection Catalogues — sig_sum","text":"Sums list sigverse catalogues, two individual catalogues, single result.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum a Collection Catalogues — sig_sum","text":"","code":"sig_sum(catalogues)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum a Collection Catalogues — sig_sum","text":"catalogues named list sigverse catalogue data.frames. See sigshared::example_catalogue_collection()","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum a Collection Catalogues — sig_sum","text":"sigverse catalogue data.frame representing total. See sigshared::example_catalogue().","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_sum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum a Collection Catalogues — sig_sum","text":"function useful aggregating catalogues across samples replicates. need add two catalogues, may use %+% operator instead.","code":""},{"path":[]},{"path":"https://selkamand.github.io/sigstats/reference/sig_sum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum a Collection Catalogues — sig_sum","text":"","code":"library(sigstash)  # Load a signature collection signatures <- sig_load(\"COSMIC_v3.3.1_SBS_GRCh38\")  # Reconstruct catalogues for two pure samples (each with 100 mutations) catalogue1 <- sig_reconstruct(signatures[['SBS3']], n = 100) catalogue2 <- sig_reconstruct(signatures[['SBS4']], n = 100)  # Sum catalogue1 and  catalogue2 catalogue_sum <- catalogue1 %+% catalogue2  # Sum a collection collection <- list(cat1 = catalogue1, cat2 = catalogue2) collection <- sig_sum(collection)"},{"path":"https://selkamand.github.io/sigstats/reference/sig_summarise_bootstraps.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Signature Bootstraps — sig_summarise_bootstraps","title":"Summarise Signature Bootstraps — sig_summarise_bootstraps","text":"function computes summary statistics signature-level bootstraps, including quantiles, min/max contribution proportions, experimental p-value.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_summarise_bootstraps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Signature Bootstraps — sig_summarise_bootstraps","text":"","code":"sig_summarise_bootstraps(   bootstraps,   threshold = 0.05,   outliers_as_strings = FALSE )"},{"path":"https://selkamand.github.io/sigstats/reference/sig_summarise_bootstraps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Signature Bootstraps — sig_summarise_bootstraps","text":"bootstraps data frame containing bootstrap results sigverse-style format. See sigshared::example_bootstraps() details. threshold minimum proportion mutations must explained signature considered present bootstrap. threshold used calculating experimental p-value via sig_compute_experimental_p_value(). outliers_as_strings Logical. Return outliers character vector '|' delimited strings rather list-column (ignored return_dataframe = FALSE). Can customise delimiter using delim argument","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_summarise_bootstraps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Signature Bootstraps — sig_summarise_bootstraps","text":"data frame containing following columns: signatures Names signatures. quantiles, iqr, min, max,outlier_thresholds Statistical summary columns (quantiles, min, max) contribution proportions across bootstraps. outliers either list column character '|' outlier strings (depending outliers_as_strings argument p_value Computed experimental p-value signature, based threshold.","code":""},{"path":"https://selkamand.github.io/sigstats/reference/sig_summarise_bootstraps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Signature Bootstraps — sig_summarise_bootstraps","text":"","code":"library(sigshared) bootstraps <- example_bootstraps() sig_summarise_bootstraps(bootstraps, threshold = 0.05) #>   signatures  min  max     q1     q3   iqr median n outlier_low_threshold #> 1 Signature1 0.30 0.44 0.3350 0.4050 0.070  0.370 2                 0.230 #> 2 Signature2 0.50 0.69 0.5475 0.6425 0.095  0.595 2                 0.405 #> 3 Signature3 0.01 0.06 0.0225 0.0475 0.025  0.035 2                -0.015 #>   outlier_high_threshold outliers p_value #> 1                  0.510              0.0 #> 2                  0.785              0.0 #> 3                  0.085              0.5"}]
